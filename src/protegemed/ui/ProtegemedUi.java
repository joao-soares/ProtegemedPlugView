/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package protegemed.ui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import protegemed.services.ProtegemedCompute;
import protegemed.services.ProtegemedConnection;

/**
 *
 * @author Joao Antonio Soares
 */
public class ProtegemedUi extends javax.swing.JFrame {

    /**
     *
     */
    private static final long serialVersionUID = -770996736859336177L;

    /**
     * Creates new form ProtegemedUi
     */
    public ProtegemedUi() {
        initComponents();
        fillPlugs();
        fillDates();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jLabelPlug = new javax.swing.JLabel();
        jLabelInterval = new javax.swing.JLabel();
        jLabelBetween = new javax.swing.JLabel();
        jFormattedTextFieldEndDate = new javax.swing.JFormattedTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jFormattedTextFieldStartDate = new javax.swing.JFormattedTextField();
        jScrollPanePlugs = new javax.swing.JScrollPane();
        jListPlug = new javax.swing.JList<>();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 300));
        setResizable(false);

        jLabelPlug.setText("Tomada");

        jLabelInterval.setText("Per\u00EDodo");

        jLabelBetween.setText("at\u00E9");

        try {
            jFormattedTextFieldEndDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jButtonSearch.setText("Buscar dados");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelTitle.setText("Dados de uso de tomadas do Protegemed");

        try {
            jFormattedTextFieldStartDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jScrollPanePlugs.setViewportView(jListPlug);

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitle)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelMainLayout.createSequentialGroup()
                                .addComponent(jLabelPlug)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPanePlugs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelMainLayout.createSequentialGroup()
                                .addComponent(jLabelInterval)
                                .addGap(18, 18, 18)
                                .addComponent(jFormattedTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelBetween)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPlug)
                    .addComponent(jScrollPanePlugs, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBetween)
                    .addComponent(jFormattedTextFieldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelInterval)
                    .addComponent(jFormattedTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonSearch)
                .addGap(42, 42, 42))
        );

        jMenuFile.setText("Arquivo");

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenu.setText("Sair");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenuFile.add(exitMenu);

        jMenuBar.add(jMenuFile);

        jMenuHelp.setText("Ajuda");

        aboutMenu.setText("Sobre");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });
        jMenuHelp.add(aboutMenu);

        jMenuBar.add(jMenuHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        if (validateDates()) {

            List<String> plugs = jListPlug.getSelectedValuesList();
            String startDate = jFormattedTextFieldStartDate.getText();
            String endDate = jFormattedTextFieldEndDate.getText();
            
            endDate = endDate.concat(" 23:59:59");

            ProtegemedCompute compute = new ProtegemedCompute(plugs, startDate, endDate);

            try {

                Map<Integer, Map<String, String>> computeReturn = compute.executeSearch();
                ProtegemedResults modalResult = new ProtegemedResults(this, true, computeReturn);

                modalResult.setVisible(true);

            } catch (SQLException e) {

                String message = "Nao foi possivel executar a busca. Tente novamente.";
                String title = "Erro ao executar busca";
                JOptionPane.showMessageDialog(rootPane, message, title, JOptionPane.ERROR_MESSAGE);
                
                System.out.println("SQLException: " + e.getMessage());
                System.out.println("SQLState: " + e.getSQLState());
                System.out.println("VendorError: " + e.getErrorCode());
                
            }

        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        showAboutMessage();
    }//GEN-LAST:event_aboutMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProtegemedUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProtegemedUi().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JFormattedTextField jFormattedTextFieldEndDate;
    private javax.swing.JFormattedTextField jFormattedTextFieldStartDate;
    private javax.swing.JLabel jLabelBetween;
    private javax.swing.JLabel jLabelInterval;
    private javax.swing.JLabel jLabelPlug;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JList<String> jListPlug;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPanePlugs;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings({"unchecked", "rawtypes"})
    private void fillPlugs() {

        Connection conn = ProtegemedConnection.getConnection();

        if (conn != null) {

            try {

                ArrayList<String> plugNumbers = new ArrayList<>();
                String query = "SELECT DISTINCT(codTomada) FROM capturaatual ORDER BY codTomada";
                PreparedStatement ps = conn.prepareStatement(query);
                try (ResultSet rs = ps.executeQuery(query)) {
                    while (rs.next()) {
                        String plug = rs.getString("codTomada");
                        plugNumbers.add(plug);
                    }
                }

                DefaultComboBoxModel model = new DefaultComboBoxModel(plugNumbers.toArray());
                jListPlug.setModel(model);

            } catch (SQLException ex) {

                Logger.getLogger(ProtegemedUi.class.getName()).log(Level.SEVERE, null, ex);

            } finally {

                ProtegemedConnection.closeConnection(conn);

            }

        } else {

            String message = "Nao foi possivel estabelecer uma conexao. Por favor, certifique-se de que voce esta conectado a VPN antes de continuar";
            String title = "Falha na conexao";
            JOptionPane.showMessageDialog(rootPane, message, title, JOptionPane.ERROR_MESSAGE);
            System.exit(0);

        }

    }

    private void fillDates() {

        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");

        Date startDate = Calendar.getInstance().getTime();
        jFormattedTextFieldStartDate.setText(df.format(startDate));
        jFormattedTextFieldEndDate.setText(df.format(startDate));
    }

    private boolean validateDates() {

        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        df.setLenient(false);

        String startDate = jFormattedTextFieldStartDate.getText();
        String endDate = jFormattedTextFieldEndDate.getText();

        try {
            Date start = df.parse(startDate);
            Date end = df.parse(endDate);

            Calendar cal = Calendar.getInstance();
            cal.setTime(end);
            cal.set(Calendar.HOUR_OF_DAY, 23);
            cal.set(Calendar.MINUTE, 59);
            cal.set(Calendar.SECOND, 59);
            cal.set(Calendar.MILLISECOND, 999);
            end.setTime(cal.getTime().getTime());

            if (start.after(end)) {
                String message = "Data inicial maior do que a data final";
                String title = "Datas incorretas";
                JOptionPane.showMessageDialog(rootPane, message, title, JOptionPane.ERROR_MESSAGE);
                return false;
            }

            return true;

        } catch (ParseException ex) {
            String message = "Verifique as datas informadas";
            String title = "Datas incorretas";
            JOptionPane.showMessageDialog(rootPane, message, title, JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void showAboutMessage() {
        String s = "<html><body width='350'>"
                + "<h2>Sobre</h2>"
                + "<p>Software desenvolvido para facilitar a visualiza&ccedil;&atilde;o dos tempos de uso de equipamentos eletrom&eacute;dicos capturados pelo Protegemed, "
                + "por per&iacute;odo e por tomada, como parte do trabalho de conclus&atilde;o do curso de Ci&ecirc;ncia da Computa&ccedil;&atilde;o "
                + "da Universidade de Passo Fundo, desenvolvido pelo acad&ecirc;mico Jo&atilde;o Ant&ocirc;nio Soares sob orienta&ccedil;&atilde;o "
                + "do professor Marcelo Trindade Rebonatto.";

        JOptionPane.showMessageDialog(rootPane, s, "Sobre", JOptionPane.PLAIN_MESSAGE);
    }

}
